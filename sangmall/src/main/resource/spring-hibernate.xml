<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

<!--
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
	 <property name="driverClassName" value="${jdbc_driverClassName}" />  
	 <property name="url" value="${jdbc_url}" />  
	 <property name="username" value="${jdbc_username}"/>  
	 <property name="password" value="${jdbc_password}"/> 
   </bean> 
-->
<!--
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${jdbc_driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc_url}</value>
		</property>
		<property name="username">
			<value>${jdbc_username}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
		<property name="idleConnectionTestPeriodInMinutes" value="60" />
		<property name="idleMaxAgeInMinutes" value="240" />
		<property name="maxConnectionsPerPartition" value="30" />
		<property name="minConnectionsPerPartition" value="10" />
		<property name="partitionCount" value="3" />
		<property name="acquireIncrement" value="5" />
		<property name="poolAvailabilityThreshold" value="10"></property>
		<property name="connectionTimeoutInMs" value="10000"></property>
	</bean>
-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
	    <property name="driverClass" value="${jdbc_driverClassName}"></property>  
	    <property name="jdbcUrl" value="${jdbc_url}"></property>  
	    <property name="user" value="${jdbc_username}"></property>  
	    <property name="password" value="${jdbc_password}"></property>  
	    <property name="acquireIncrement" value="5"></property>  
	    <property name="initialPoolSize" value="10"></property>  
	    <property name="maxIdleTime" value="240"></property>  
	    <property name="idleConnectionTestPeriod" value="180"></property> 
	    <property name="maxPoolSize" value="20"></property>  
	    <property name="minPoolSize" value="5"></property>  
	      
	    <property name="acquireRetryDelay" value="1000"></property>  
	    <property name="acquireRetryAttempts" value="30"></property>  
	    <property name="breakAfterAcquireFailure" value="false"></property>
	    
	    
	    <property name="testConnectionOnCheckout" value="true"></property>   
	</bean> 
<!-- Hibernate 4
	<bean id="sessionFactory"
	  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="packagesToScan" value="com.sangmall.model" />
	    <property name="hibernateProperties">
	        <props>
	         <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	         <prop key="hibernate.show_sql">true</prop>
	         <prop key="hibernate.format_sql">true</prop>
	        </props>
	    </property>
	</bean>
<-->

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	   <property name="dataSource" ref="dataSource"/>
	   <property name="packagesToScan" value="com.sangmall.model"/>
       <property name="hibernateProperties">
	        <props>
	         <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	         <prop key="hibernate.show_sql">true</prop>
	         <prop key="hibernate.format_sql">true</prop>
	         <prop key="hibernate.connection.autocommit">true</prop> 
	        </props>
	    </property>
    </bean>

<!-- 
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
-->

    <bean id="templateDao" class="com.sangmall.dao.TemplateDao">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
   		<property name="dataSource">
    		<ref bean="dataSource" />
   		</property>
	</bean>
    
<!--
    <bean id="job1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject">  
			<bean class="com.sangmall.job.CdrProcesser" />  
		</property>  
		<property name="targetMethod" value="run" />  
		<property name="concurrent" value="false" /> 
	</bean>

    <bean id="job2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject">  
			<bean class="com.fonebiz.job.UpdateOperatorStateByCallingPeriods" />  
		</property>  
		<property name="targetMethod" value="run" />  
		<property name="concurrent" value="false" />
	</bean>
-->	

<!-- 
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
		<property name="jobDetail" ref="job" />  
		<property name="cronExpression" value="*/1 * * * * ?" />  
	</bean>  
-->
<!--
	<bean id="simpleTrigger1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
		<property name="jobDetail" ref="job1" />  
		<property name="startDelay" value="0" />
		<property name="repeatInterval" value="60000" />  
	</bean> 
	
	<bean id="simpleTrigger2" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
		<property name="jobDetail" ref="job2" />  
		<property name="startDelay" value="0" />
		<property name="repeatInterval" value="60000" /> 
	</bean> 

	<bean id="job3" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject">  
			<bean class="com.fonebiz_admin.job.DailyReport" />  
		</property>  
		<property name="targetMethod" value="run" />  
		<property name="concurrent" value="false" /> 
	</bean>
	
	<bean id="job4" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject">  
			<bean class="com.fonebiz_admin.job.LongCdrAlarm" />  
		</property>  
		<property name="targetMethod" value="run" />  
		<property name="concurrent" value="false" /> 
	</bean>
	
	<bean id="cronTrigger3" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
		<property name="jobDetail" ref="job3" />  
		<property name="cronExpression" value="59 59 23 * * ?" />  
	</bean>  

	<bean id="cronTrigger4" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
		<property name="jobDetail" ref="job4" />  
		<property name="cronExpression" value="0 0/5 * * * ?" />  
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
		<property name="triggers">  
			<list>  
				<ref bean="cronTrigger3" />
			</list>  
		</property>  
	</bean>
-->
</beans>